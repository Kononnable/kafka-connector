pub mod header;

pub mod add_offsets_to_txn;
pub mod add_partitions_to_txn;
pub mod alter_client_quotas;
pub mod alter_configs;
pub mod alter_isr;
pub mod alter_partition_reassignments;
pub mod alter_replica_log_dirs;
pub mod alter_user_scram_credentials;
pub mod api_versions;
pub mod controlled_shutdown;
pub mod create_acls;
pub mod create_delegation_token;
pub mod create_partitions;
pub mod create_topics;
pub mod delete_acls;
pub mod delete_groups;
pub mod delete_records;
pub mod delete_topics;
pub mod describe_acls;
pub mod describe_client_quotas;
pub mod describe_configs;
pub mod describe_delegation_token;
pub mod describe_groups;
pub mod describe_log_dirs;
pub mod describe_user_scram_credentials;
pub mod elect_leaders;
pub mod end_txn;
pub mod expire_delegation_token;
pub mod fetch;
pub mod find_coordinator;
pub mod heartbeat;
pub mod incremental_alter_configs;
pub mod init_producer_id;
pub mod join_group;
pub mod leader_and_isr;
pub mod leave_group;
pub mod list_groups;
pub mod list_offsets;
pub mod list_partition_reassignments;
pub mod metadata;
pub mod offset_commit;
pub mod offset_delete;
pub mod offset_fetch;
pub mod offset_for_leader_epoch;
pub mod produce;
pub mod renew_delegation_token;
pub mod sasl_authenticate;
pub mod sasl_handshake;
pub mod stop_replica;
pub mod sync_group;
pub mod txn_offset_commit;
pub mod update_features;
pub mod update_metadata;
pub mod write_txn_markers;

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum ApiNumbers {
    Produce = 0,
    Fetch = 1,
    ListOffsets = 2,
    Metadata = 3,
    LeaderAndIsr = 4,
    StopReplica = 5,
    UpdateMetadata = 6,
    ControlledShutdown = 7,
    OffsetCommit = 8,
    OffsetFetch = 9,
    FindCoordinator = 10,
    JoinGroup = 11,
    Heartbeat = 12,
    LeaveGroup = 13,
    SyncGroup = 14,
    DescribeGroups = 15,
    ListGroups = 16,
    SaslHandshake = 17,
    ApiVersions = 18,
    CreateTopics = 19,
    DeleteTopics = 20,
    DeleteRecords = 21,
    InitProducerId = 22,
    OffsetForLeaderEpoch = 23,
    AddPartitionsToTxn = 24,
    AddOffsetsToTxn = 25,
    EndTxn = 26,
    WriteTxnMarkers = 27,
    TxnOffsetCommit = 28,
    DescribeAcls = 29,
    CreateAcls = 30,
    DeleteAcls = 31,
    DescribeConfigs = 32,
    AlterConfigs = 33,
    AlterReplicaLogDirs = 34,
    DescribeLogDirs = 35,
    SaslAuthenticate = 36,
    CreatePartitions = 37,
    CreateDelegationToken = 38,
    RenewDelegationToken = 39,
    ExpireDelegationToken = 40,
    DescribeDelegationToken = 41,
    DeleteGroups = 42,
    ElectLeaders = 43,
    IncrementalAlterConfigs = 44,
    AlterPartitionReassignments = 45,
    ListPartitionReassignments = 46,
    OffsetDelete = 47,
    DescribeClientQuotas = 48,
    AlterClientQuotas = 49,
    DescribeUserScramCredentials = 50,
    AlterUserScramCredentials = 51,
    AlterIsr = 56,
    UpdateFeatures = 57,
}
impl ApiNumbers {
    pub fn from_i16(input: i16) -> ApiNumbers {
        match input {
            0 => ApiNumbers::Produce,
            1 => ApiNumbers::Fetch,
            2 => ApiNumbers::ListOffsets,
            3 => ApiNumbers::Metadata,
            4 => ApiNumbers::LeaderAndIsr,
            5 => ApiNumbers::StopReplica,
            6 => ApiNumbers::UpdateMetadata,
            7 => ApiNumbers::ControlledShutdown,
            8 => ApiNumbers::OffsetCommit,
            9 => ApiNumbers::OffsetFetch,
            10 => ApiNumbers::FindCoordinator,
            11 => ApiNumbers::JoinGroup,
            12 => ApiNumbers::Heartbeat,
            13 => ApiNumbers::LeaveGroup,
            14 => ApiNumbers::SyncGroup,
            15 => ApiNumbers::DescribeGroups,
            16 => ApiNumbers::ListGroups,
            17 => ApiNumbers::SaslHandshake,
            18 => ApiNumbers::ApiVersions,
            19 => ApiNumbers::CreateTopics,
            20 => ApiNumbers::DeleteTopics,
            21 => ApiNumbers::DeleteRecords,
            22 => ApiNumbers::InitProducerId,
            23 => ApiNumbers::OffsetForLeaderEpoch,
            24 => ApiNumbers::AddPartitionsToTxn,
            25 => ApiNumbers::AddOffsetsToTxn,
            26 => ApiNumbers::EndTxn,
            27 => ApiNumbers::WriteTxnMarkers,
            28 => ApiNumbers::TxnOffsetCommit,
            29 => ApiNumbers::DescribeAcls,
            30 => ApiNumbers::CreateAcls,
            31 => ApiNumbers::DeleteAcls,
            32 => ApiNumbers::DescribeConfigs,
            33 => ApiNumbers::AlterConfigs,
            34 => ApiNumbers::AlterReplicaLogDirs,
            35 => ApiNumbers::DescribeLogDirs,
            36 => ApiNumbers::SaslAuthenticate,
            37 => ApiNumbers::CreatePartitions,
            38 => ApiNumbers::CreateDelegationToken,
            39 => ApiNumbers::RenewDelegationToken,
            40 => ApiNumbers::ExpireDelegationToken,
            41 => ApiNumbers::DescribeDelegationToken,
            42 => ApiNumbers::DeleteGroups,
            43 => ApiNumbers::ElectLeaders,
            44 => ApiNumbers::IncrementalAlterConfigs,
            45 => ApiNumbers::AlterPartitionReassignments,
            46 => ApiNumbers::ListPartitionReassignments,
            47 => ApiNumbers::OffsetDelete,
            48 => ApiNumbers::DescribeClientQuotas,
            49 => ApiNumbers::AlterClientQuotas,
            50 => ApiNumbers::DescribeUserScramCredentials,
            51 => ApiNumbers::AlterUserScramCredentials,
            56 => ApiNumbers::AlterIsr,
            57 => ApiNumbers::UpdateFeatures,
            _ => unreachable!("Unknown api number"),
        }
    }
}

mod prelude {
    pub use super::super::custom_types::nullable_str::NullableStr;
    pub use super::super::custom_types::nullable_string::NullableString;
    pub use super::super::custom_types::tag_buffer::TagBuffer;
    pub use super::super::custom_types::*;
    pub use super::super::from_bytes::FromBytes;
    pub use super::super::to_bytes::ToBytes;
    pub use super::super::ApiCall;
    pub use super::header::{HeaderRequest, HeaderResponse, OwnedHeaderRequest};
    pub use super::ApiNumbers;
    pub use crate::api_error::ApiError;
    pub use bytes::{Bytes, BytesMut};
    pub use kafka_connector_derive::FromBytes;
    pub use kafka_connector_derive::ToBytes;
    pub use std::convert::TryFrom;
    pub use std::convert::TryInto;
}
